VAR NUMARR 16

func main ( ) {
	var i = 0
	
	while ( i < 1023 ) {
		PRINT( i[ 0 ] )
		= ( i , i + 1 )
	}
}

func printString ( saddr ) {
	var i = 0

	while ( saddr[ i ] != 0 ) {
		PUTC( saddr[ i ] )
		= ( i , i + 1 )
	}
	
	PUTC( 0 )
}

func printNum ( v ) {
	var base      = 10
	var offset    = 48
	var rm        =  0
	var numDigits =  0
	
	if ( v ! ) {
		PUTC( 0 + offset )
		PUTC( 0 )
		return ;
	}
	
	while ( v != 0 ) {
		= ( rm , v % base )
		= ( v  , v / base )
		= ( NUMARR[ numDigits ] , rm + offset )
		= ( numDigits  , numDigits + 1 )
	}
	
	= ( numDigits  , numDigits - 1 )
	
	while ( numDigits >= 0 ) {
		PUTC( NUMARR[ numDigits ] )
		= ( numDigits  , numDigits - 1 )
	}

	PUTC( 0 )
}

func getNum ( ) {
	var c    = 0
	var r    = 0
	var base = 10
	
	while ( c != 13 ) {
		= ( c , READC( ) )
		if ( c != 13 ) {
			= ( r , r + ( c - 48 ) * base )
		}
	}
	
	PUTC( 0 )
	return r / 10 ;
}

